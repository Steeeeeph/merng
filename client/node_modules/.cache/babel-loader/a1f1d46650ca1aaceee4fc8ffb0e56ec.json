{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/becode/repos/merng/client/src/EditNote.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { notify } from \"react-notify-toast\";\nimport gql from \"graphql-tag\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NOTE_QUERY = gql`\n  query getNote($_id: ID!) {\n    getNote(_id: $_id) {\n      _id\n      title\n      content\n      date\n    }\n  }\n`;\nconst UPDATE_NOTE = gql`\n  mutation updateNote($_id: ID!, $title: String, $content: String) {\n    updateNote(_id: $_id, input: { title: $title, content: $content }) {\n      _id\n      title\n      content\n    }\n  }\n`;\n\nconst EditNote = ({\n  match\n}) => {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(NOTE_QUERY, {\n    variables: {\n      _id: match.params.id\n    }\n  });\n  const [updateNote] = useMutation(UPDATE_NOTE);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Fetching note\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error fetching note\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 21\n  }, this); // set the  result gotten from rhe GraphQL server into the note variable.\n\n  const note = data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container m-t-20\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-title\",\n      children: \"Edit Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"newnote-page m-t-20\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault(); // set the title of the note to the title in the state, if not's available set to the original title gotten from the GraphQL server\n          // set the content of the note to the content in the state, if not's available set to the original content gotten from the GraphQL server\n          // pass the id, title and content as variables to the UPDATE_NOTE mutation.\n\n          updateNote({\n            variables: {\n              _id: note.getNote._id,\n              title: title ? title : note.getNote.title,\n              content: content ? content : note.getNote.content\n            }\n          });\n          notify.show(\"Note was edited successfully\", \"success\");\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Note Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input\",\n              type: \"text\",\n              name: \"title\",\n              placeholder: \"Note Title\",\n              defaultValue: note.getNote.title,\n              onChange: e => setTitle(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: \"Note Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"textarea\",\n              rows: \"10\",\n              name: \"content\",\n              placeholder: \"Note Content here...\",\n              defaultValue: note.getNote.content,\n              onChange: e => setContent(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button is-link\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}; // const EditNote = () => {\n//   return (\n//     <div className=\"container m-t-20\">\n//       <h1 className=\"page-title\">Edit Note</h1>\n// ​\n//       <div className=\"newnote-page m-t-20\">\n//         <form>\n//           <div className=\"field\">\n//             <label className=\"label\">Note Title</label>\n//             <div className=\"control\">\n//               <input className=\"input\" type=\"text\" placeholder=\"Note Title\" />\n//             </div>\n//           </div>\n// ​\n//           <div class=\"field\">\n//             <label class=\"label\">Note Content</label>\n//             <div class=\"control\">\n//               <textarea\n//                 class=\"textarea\"\n//                 rows=\"10\"\n//                 placeholder=\"Note Content here...\">\n//               </textarea>\n//             </div>\n//           </div>\n// ​\n//           <div class=\"field\">\n//             <div class=\"control\">\n//               <button class=\"button is-link\">Submit</button>\n//             </div>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\n\n_s(EditNote, \"bv4aR74OtII0N4FtqsP11zqdge4=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = EditNote;\nexport default EditNote;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditNote\");","map":{"version":3,"sources":["/Users/macbookpro/Desktop/becode/repos/merng/client/src/EditNote.js"],"names":["React","useState","useQuery","useMutation","notify","gql","NOTE_QUERY","UPDATE_NOTE","EditNote","match","title","setTitle","content","setContent","loading","error","data","variables","_id","params","id","updateNote","note","e","preventDefault","getNote","show","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { notify } from \"react-notify-toast\";\nimport gql from \"graphql-tag\";\n\nconst NOTE_QUERY = gql`\n  query getNote($_id: ID!) {\n    getNote(_id: $_id) {\n      _id\n      title\n      content\n      date\n    }\n  }\n`;\n\nconst UPDATE_NOTE = gql`\n  mutation updateNote($_id: ID!, $title: String, $content: String) {\n    updateNote(_id: $_id, input: { title: $title, content: $content }) {\n      _id\n      title\n      content\n    }\n  }\n`;\n\nconst EditNote = ({ match }) => {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const { loading, error, data } = useQuery(NOTE_QUERY, {\n    variables: {\n      _id: match.params.id\n    }\n  });\n\n  const [updateNote] = useMutation(UPDATE_NOTE);\n\n  if (loading) return <div>Fetching note</div>;\n  if (error) return <div>Error fetching note</div>;\n\n  // set the  result gotten from rhe GraphQL server into the note variable.\n  const note = data;\n\n  return (\n    <div className=\"container m-t-20\">\n      <h1 className=\"page-title\">Edit Note</h1>\n\n      <div className=\"newnote-page m-t-20\">\n        <form\n          onSubmit={e => {\n            e.preventDefault();\n\n            // set the title of the note to the title in the state, if not's available set to the original title gotten from the GraphQL server\n            // set the content of the note to the content in the state, if not's available set to the original content gotten from the GraphQL server\n            // pass the id, title and content as variables to the UPDATE_NOTE mutation.\n            updateNote({\n              variables: {\n                _id: note.getNote._id,\n                title: title ? title : note.getNote.title,\n                content: content ? content : note.getNote.content\n              }\n            });\n\n            notify.show(\"Note was edited successfully\", \"success\");\n          }}\n        >\n          <div className=\"field\">\n            <label className=\"label\">Note Title</label>\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"Note Title\"\n                defaultValue={note.getNote.title}\n                onChange={e => setTitle(e.target.value)}\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\">Note Content</label>\n            <div className=\"control\">\n              <textarea\n                className=\"textarea\"\n                rows=\"10\"\n                name=\"content\"\n                placeholder=\"Note Content here...\"\n                defaultValue={note.getNote.content}\n                onChange={e => setContent(e.target.value)}\n                required\n              ></textarea>\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <div className=\"control\">\n              <button className=\"button is-link\">Submit</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\n// const EditNote = () => {\n//   return (\n//     <div className=\"container m-t-20\">\n//       <h1 className=\"page-title\">Edit Note</h1>\n// ​\n//       <div className=\"newnote-page m-t-20\">\n//         <form>\n//           <div className=\"field\">\n//             <label className=\"label\">Note Title</label>\n//             <div className=\"control\">\n//               <input className=\"input\" type=\"text\" placeholder=\"Note Title\" />\n//             </div>\n//           </div>\n// ​\n//           <div class=\"field\">\n//             <label class=\"label\">Note Content</label>\n//             <div class=\"control\">\n//               <textarea\n//                 class=\"textarea\"\n//                 rows=\"10\"\n//                 placeholder=\"Note Content here...\">\n//               </textarea>\n//             </div>\n//           </div>\n// ​\n//           <div class=\"field\">\n//             <div class=\"control\">\n//               <button class=\"button is-link\">Submit</button>\n//             </div>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// }\n\nexport default EditNote;"]},"metadata":{},"sourceType":"module"}