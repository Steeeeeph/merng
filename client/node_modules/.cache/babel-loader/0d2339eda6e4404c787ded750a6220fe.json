{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/becode/repos/merng/client/src/AllNotes.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport gql from \"graphql-tag\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { notify } from \"react-notify-toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NOTES_QUERY = gql`\n    {\n        allNotes {\n            title\n            content\n            _id\n            date\n        }\n    }\n`;\nconst DELETE_NOTE_QUERY = gql`\n    mutation deleteNote($_id: ID!) {\n        deleteNote(_id: $_id) {\n            title\n            content\n            _id\n            date\n        }\n    }\n`;\n\nconst AllNotes = () => {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(NOTES_QUERY);\n  const [deleteNote] = useMutation(DELETE_NOTE_QUERY, {\n    update(cache, {\n      data: {\n        deleteNote\n      }\n    }) {\n      const {\n        allNotes\n      } = cache.readQuery({\n        query: NOTES_QUERY\n      });\n      const newNotes = allNotes.filter(note => note._id !== deleteNote._id);\n      cache.writeQuery({\n        query: NOTES_QUERY,\n        data: {\n          allNotes: newNotes\n        }\n      });\n    }\n\n  });\n  if (loading) return \"Loading...\";\n  if (error) return `Error! ${error.message}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container m-t-20\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-title\",\n      children: \"All Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"allnotes-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns is-multiline\",\n        children: data.allNotes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column is-one-third\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"header\", {\n              className: \"card-header\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-header-title\",\n                children: note.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-content\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content\",\n                children: [note.content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n              className: \"card-footer\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `note/${note._id}`,\n                className: \"card-footer-item\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => {\n                  e.preventDefault();\n                  deleteNote({\n                    variables: {\n                      _id: note._id\n                    }\n                  });\n                  notify.show(\"Note was deleted successfully\", \"success\");\n                },\n                className: \"card-footer-item\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)\n        }, note._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}; // import React from \"react\";\n// import { Link } from \"react-router-dom\";\n// const AllNotes = () => {\n//     let data = [1, 2, 3, 4, 5];\n//     return (\n//         <div className=\"container m-t-20\">\n//             <h1 className=\"page-title\">All Notes</h1>\n//             <div className=\"allnotes-page\">\n//                 <div className=\"columns is-multiline\">\n//                         {data.length > 0 ? data.map((item, i) => (\n//                                         <div className=\"column is-one-third\" key={i}>\n//                                         <div className=\"card\">\n//                                                 <header className=\"card-header\">\n//                                                 <p className=\"card-header-title\">Component</p>\n//                                                 </header>\n//                                                 <div className=\"card-content\">\n//                                                 <div className=\"content\">\n//                                                         Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n//                                                         Phasellus nec iaculis mauris. Lorem ipsum dolor sit\n//                                                         amet.\n//                                                         <br />\n//                                                 </div>\n//                                                 </div>\n//                                                 <footer className=\"card-footer\">\n//                                                         <Link to={`note/${i}`} className=\"card-footer-item\">Edit</Link>\n//                                                         <a href=\"#\" className=\"card-footer-item\">Delete</a>\n//                                                 </footer>\n//                                         </div>\n//                                         </div>\n//                                 )): \"No Notes yet\"\n//                         }\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\n\n_s(AllNotes, \"xKdRDFBlko2ur6xHHW1AlmbXe0A=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = AllNotes;\nexport default AllNotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllNotes\");","map":{"version":3,"sources":["/Users/macbookpro/Desktop/becode/repos/merng/client/src/AllNotes.js"],"names":["React","Link","gql","useQuery","useMutation","notify","NOTES_QUERY","DELETE_NOTE_QUERY","AllNotes","loading","error","data","deleteNote","update","cache","allNotes","readQuery","query","newNotes","filter","note","_id","writeQuery","message","map","title","content","e","preventDefault","variables","show"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport gql from \"graphql-tag\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { notify } from \"react-notify-toast\";\n\nconst NOTES_QUERY = gql`\n    {\n        allNotes {\n            title\n            content\n            _id\n            date\n        }\n    }\n`;\n\nconst DELETE_NOTE_QUERY = gql`\n    mutation deleteNote($_id: ID!) {\n        deleteNote(_id: $_id) {\n            title\n            content\n            _id\n            date\n        }\n    }\n`;\n\nconst AllNotes = () => {\n    const { loading, error, data } = useQuery(NOTES_QUERY);\n\n    const [deleteNote] = useMutation(DELETE_NOTE_QUERY, {\n        update(\n            cache,\n            {\n                data: { deleteNote }\n            }\n        ) {\n            const { allNotes } = cache.readQuery({ query: NOTES_QUERY });\n            const newNotes = allNotes.filter(note => note._id !== deleteNote._id);\n\n            cache.writeQuery({\n                query: NOTES_QUERY,\n                data: { allNotes: newNotes }\n            });\n        }\n    });\n\n    if (loading) return \"Loading...\";\n    if (error) return `Error! ${error.message}`;\n\n    return (\n        <div className=\"container m-t-20\">\n            <h1 className=\"page-title\">All Notes</h1>\n\n            <div className=\"allnotes-page\">\n                <div className=\"columns is-multiline\">\n                    {data.allNotes.map(note => (\n                        <div className=\"column is-one-third\" key={note._id}>\n                            <div className=\"card\">\n                                <header className=\"card-header\">\n                                    <p className=\"card-header-title\">{note.title}</p>\n                                </header>\n                                <div className=\"card-content\">\n                                    <div className=\"content\">\n                                        {note.content}\n                                        <br />\n                                    </div>\n                                </div>\n                                <footer className=\"card-footer\">\n                                    <Link to={`note/${note._id}`} className=\"card-footer-item\">\n                                        Edit\n                                    </Link>\n                                    <button\n                                        onClick={e => {\n                                            e.preventDefault();\n                                            deleteNote({ variables: { _id: note._id } });\n                                            notify.show(\"Note was deleted successfully\", \"success\");\n                                        }}\n                                        className=\"card-footer-item\"\n                                    >\n                                        Delete\n                                    </button>\n                                </footer>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\n// import React from \"react\";\n// import { Link } from \"react-router-dom\";\n// const AllNotes = () => {\n//     let data = [1, 2, 3, 4, 5];\n//     return (\n//         <div className=\"container m-t-20\">\n//             <h1 className=\"page-title\">All Notes</h1>\n//             <div className=\"allnotes-page\">\n//                 <div className=\"columns is-multiline\">\n//                         {data.length > 0 ? data.map((item, i) => (\n//                                         <div className=\"column is-one-third\" key={i}>\n//                                         <div className=\"card\">\n//                                                 <header className=\"card-header\">\n//                                                 <p className=\"card-header-title\">Component</p>\n//                                                 </header>\n//                                                 <div className=\"card-content\">\n//                                                 <div className=\"content\">\n//                                                         Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n//                                                         Phasellus nec iaculis mauris. Lorem ipsum dolor sit\n//                                                         amet.\n//                                                         <br />\n//                                                 </div>\n//                                                 </div>\n//                                                 <footer className=\"card-footer\">\n//                                                         <Link to={`note/${i}`} className=\"card-footer-item\">Edit</Link>\n//                                                         <a href=\"#\" className=\"card-footer-item\">Delete</a>\n//                                                 </footer>\n//                                         </div>\n//                                         </div>\n//                                 )): \"No Notes yet\"\n//                         }\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\nexport default AllNotes;"]},"metadata":{},"sourceType":"module"}