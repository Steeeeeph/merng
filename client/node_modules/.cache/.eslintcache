[{"/Users/macbookpro/Desktop/becode/repos/merng/client/src/index.js":"1","/Users/macbookpro/Desktop/becode/repos/merng/client/src/App.js":"2","/Users/macbookpro/Desktop/becode/repos/merng/client/src/NewNote.js":"3","/Users/macbookpro/Desktop/becode/repos/merng/client/src/AllNotes.js":"4","/Users/macbookpro/Desktop/becode/repos/merng/client/src/EditNote.js":"5","/Users/macbookpro/Desktop/becode/repos/merng/client/src/serviceWorker.js":"6","/Users/macbookpro/Desktop/becode/repos/merng/client/src/Form.js":"7"},{"size":1522,"mtime":1617721773014,"results":"8","hashOfConfig":"9"},{"size":982,"mtime":1617780804687,"results":"10","hashOfConfig":"9"},{"size":4893,"mtime":1617722845687,"results":"11","hashOfConfig":"9"},{"size":5253,"mtime":1617716953020,"results":"12","hashOfConfig":"9"},{"size":4239,"mtime":1617717929971,"results":"13","hashOfConfig":"9"},{"size":5197,"mtime":1617711117555,"results":"14","hashOfConfig":"9"},{"size":629,"mtime":1617730857473,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14twi8k",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"/Users/macbookpro/Desktop/becode/repos/merng/client/src/index.js",[],"/Users/macbookpro/Desktop/becode/repos/merng/client/src/App.js",[],"/Users/macbookpro/Desktop/becode/repos/merng/client/src/NewNote.js",["32"],"import React, { useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { notify } from 'react-notify-toast';\n\nconst NEW_NOTE = gql`\n    mutation createNote($title: String! $content: String!) {\n        createNote( input: {title: $title, content: $content}) {\n            _id\n            title\n            content\n            date\n        }\n    }\n`;\nconst NOTES_QUERY = gql`\n    {\n        allNotes {\n            title\n            content\n            _id\n            date\n        }\n    }\n`;\nconst NewNote = withRouter(({ history }) => {\n    const [title, setTitle] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n\n    const [createNote] = useMutation(NEW_NOTE, {\n        update(\n            cache,\n            {\n                data: { createNote }\n            }\n        ) {\n            const { allNotes } = cache.readQuery({ query: NOTES_QUERY });\n\n            cache.writeQuery({\n                query: NOTES_QUERY,\n                data: { allNotes: allNotes.concat([createNote]) }\n            });\n        }\n    });\n\n    return (\n        <div className=\"container m-t-20\">\n            <h1 className=\"page-title\">New Note</h1>\n\n            <div className=\"newnote-page m-t-20\">\n                <form\n                    onSubmit={e => {\n                        e.preventDefault();\n\n                        createNote({\n                            variables: {\n                                title,\n                                content,\n                                date: Date.now()\n                            }\n                        });\n                        // TODO notification/ empty field error \n                        // if (!empty) {\n                        //     notify.show(\"Note was edited successfully\", \"success\");\n                        // } else {\n                        // notify.show(\"Please fill in the fields\", \"error\");\n                        // }\n                        history.push(\"/\");\n                    }}\n                >\n                    <div className=\"field\">\n                        <label className=\"label\">Note Title</label>\n                        <div className=\"control\">\n                            <input\n                                className=\"input\"\n                                name=\"title\"\n                                type=\"text\"\n                                placeholder=\"Note Title\"\n                                value={title}\n                                onChange={e => setTitle(e.target.value)}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"field\">\n                        <label className=\"label\">Note Content</label>\n                        <div className=\"control\">\n                            <textarea\n                                className=\"textarea\"\n                                name=\"content\"\n                                rows=\"10\"\n                                placeholder=\"Note Content here...\"\n                                value={content}\n                                onChange={e => setContent(e.target.value)}\n                            ></textarea>\n                        </div>\n                    </div>\n\n                    <div className=\"field\">\n                        <div className=\"control\">\n                            <button className=\"button is-link\">Submit</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n});\n\n// const NewNote = () => {\n//     return (\n//         <div className=\"container m-t-20\">\n//             <h1 className=\"page-title\">New Note</h1>\n// ​\n//             <div className=\"newnote-page m-t-20\">\n//                 <form>\n//                     <div className=\"field\">\n//                         <label className=\"label\">Note Title</label>\n//                         <div className=\"control\">\n//                             <input className=\"input\" type=\"text\" placeholder=\"Note Title\" />\n//                         </div>\n//                     </div>\n// ​\n//                     <div class=\"field\">\n//                         <label class=\"label\">Note Content</label>\n//                         <div class=\"control\">\n//                             <textarea class=\"textarea\" rows=\"10\" placeholder=\"Note Content here...\"></textarea>\n//                         </div>\n//                     </div>\n// ​\n// ​\n//                     <div class=\"field\">\n//                         <div class=\"control\">\n//                             <button class=\"button is-link\">Submit</button>\n//                         </div>\n//                     </div>\n// ​\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// }\n\nexport default NewNote;","/Users/macbookpro/Desktop/becode/repos/merng/client/src/AllNotes.js",[],"/Users/macbookpro/Desktop/becode/repos/merng/client/src/EditNote.js",[],"/Users/macbookpro/Desktop/becode/repos/merng/client/src/serviceWorker.js",[],"/Users/macbookpro/Desktop/becode/repos/merng/client/src/Form.js",["33","34","35"],"import React, { useState } from 'react';\nexport default function Form() {\n    const [emailAddress, setEmailAddress] = useState('');\n    const [password, setPassword] = useState('');\n    const isInvalid = password === '' || emailAddress === '';\n\n    const handleSignIn = (e) => {\n        e.preventDefault();\n    }\n    return (\n        <form onSubmit={handleSignIn} method=\"post\">\n            <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"e-mail adress\"/>\n            <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"password\"/>\n            <input type=\"submit\" value=\"sign in\"/>\n        </form>\n    )\n}",{"ruleId":"36","severity":1,"message":"37","line":5,"column":10,"nodeType":"38","messageId":"39","endLine":5,"endColumn":16},{"ruleId":"36","severity":1,"message":"40","line":3,"column":26,"nodeType":"38","messageId":"39","endLine":3,"endColumn":41},{"ruleId":"36","severity":1,"message":"41","line":4,"column":22,"nodeType":"38","messageId":"39","endLine":4,"endColumn":33},{"ruleId":"36","severity":1,"message":"42","line":5,"column":11,"nodeType":"38","messageId":"39","endLine":5,"endColumn":20},"no-unused-vars","'notify' is defined but never used.","Identifier","unusedVar","'setEmailAddress' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'isInvalid' is assigned a value but never used."]